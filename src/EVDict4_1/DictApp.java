/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EVDict4_1;

import com.sun.speech.freetts.Voice;
import com.sun.speech.freetts.VoiceManager;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ADMIN
 */
public class DictApp extends javax.swing.JFrame {

    /**
     * Creates new form DictApp
     */
    public DictApp() {
        initComponents();
        initRecentWordList();
        speakerButton.setVisible(false);
    }
    
    public int state = 0;
    public int check_input = 0;
    DefaultListModel list;
    String word_select = "";
    
    FileImplement dic1 = new FileImplement(0);
    FileImplement dic2 = new FileImplement(1);
    DictionaryData da = new DictionaryData();
    
    
    AddForm af = new AddForm();
    
    public void initRecentWordList() {
        list = new DefaultListModel();
        da.readFromFile(da.recentWord, "RecentList.txt");
        list = da.initRecentList(da.recentWord);
        dictList.setModel(list); 
    }
    
    public void initDictList() {
        list = new DefaultListModel();
        if (state == 0) {
            list = dic1.initDict();
        } else if (state == 1) {
            list = dic2.initDict();
        }
        dictList.setModel(list);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        dictList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        meaningTextPane = new javax.swing.JTextPane();
        evButton = new javax.swing.JButton();
        veButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        speakerButton = new javax.swing.JButton();
        recentButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        searchTextField.setText("Tra cứu từ ở đây bạn nhé...");
        searchTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTextFieldMouseClicked(evt);
            }
        });
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });

        dictList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        dictList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                dictListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(dictList);

        meaningTextPane.setContentType("text/html"); // NOI18N
        jScrollPane2.setViewportView(meaningTextPane);

        evButton.setText("E_VButton");
        evButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evButtonActionPerformed(evt);
            }
        });

        veButton.setText("V_EButton");
        veButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                veButtonActionPerformed(evt);
            }
        });

        searchButton.setText("search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Remove");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        exportButton.setText("Export");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        speakerButton.setText("Speaker");
        speakerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speakerButtonActionPerformed(evt);
            }
        });

        recentButton.setText("Recent Word");
        recentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recentButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("jMenuItem1");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("jMenuItem2");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem3.setText("jMenuItem3");
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("jMenuItem4");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Selection");

        jMenuItem6.setText("jMenuItem6");
        jMenu3.add(jMenuItem6);

        jMenuItem5.setText("jMenuItem5");
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(speakerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(addButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton)
                        .addGap(18, 18, 18)
                        .addComponent(editButton)
                        .addGap(18, 18, 18)
                        .addComponent(exportButton)
                        .addGap(16, 16, 16)
                        .addComponent(evButton)
                        .addGap(30, 30, 30)
                        .addComponent(veButton)
                        .addGap(48, 48, 48)
                        .addComponent(recentButton)))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evButton)
                    .addComponent(veButton)
                    .addComponent(addButton)
                    .addComponent(deleteButton)
                    .addComponent(editButton)
                    .addComponent(exportButton)
                    .addComponent(recentButton))
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchButton))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(speakerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String searchWord = searchTextField.getText();
            if (searchWord.trim().isEmpty()) {
                check_input = -1;
            } else if (state == 0) {
                if (dic1.getWord().contains(searchWord)) {
                    check_input = 1;
                    meaningTextPane.setText(dic1.getDictData().get(searchWord));
                } else {
                    check_input = 0;
                }
            } else if (state == 1) {
                if (dic2.getWord().contains(searchWord)) {
                    check_input = 1;
                    meaningTextPane.setText(dic2.getDictData().get(searchWord));
                } else {
                    check_input = 0;
                }
            }
            if (check_input == -1) {
                JOptionPane.showMessageDialog(null, "Từ đang bị trống, vui lòng nhập lại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            } else if (check_input == 0) {
                JOptionPane.showMessageDialog(null, "Từ này đang không có trong từ điển!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_searchTextFieldKeyPressed

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        // TODO add your handling code here:
        ArrayList<String> newDictList = new ArrayList<>();
        list = new DefaultListModel<>();
        String searchWord = searchTextField.getText();
        if (state == 0) {
            if (searchWord.trim().isEmpty()) {
                newDictList = new ArrayList(dic1.getWord());
            } else {
                newDictList = dic1.searchWord(searchWord, dic1.getWord());
            }
        } else if (state == 1) {
            if (searchWord.trim().isEmpty()) {
                newDictList = new ArrayList(dic2.getWord());
            } else {
                newDictList = dic2.searchWord(searchWord, dic2.getWord());
            }
        }
        for (String word : newDictList) {
            list.addElement(word);
        }
        dictList.setModel(list);
    }//GEN-LAST:event_searchTextFieldKeyReleased

    private void dictListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_dictListValueChanged
        // TODO add your handling code here:
        word_select = dictList.getSelectedValue();
        searchTextField.setText(word_select);
        da.saveToRencent(word_select);
        try {
            da.readToFile(da.recentWord, "RecentList.txt");
        } catch (IOException ex) {
            Logger.getLogger(DictApp.class.getName()).log(Level.SEVERE, null, ex);
        }
        String meaning = "";
        if (state == 0) {
            meaning = dic1.getDictData().get(word_select);
        } else if (state == 1) {
            meaning = dic2.getDictData().get(word_select);
        }
        speakerButton.setVisible(true);
        meaningTextPane.setText(meaning);
    }//GEN-LAST:event_dictListValueChanged

    private void evButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evButtonActionPerformed
        // TODO add your handling code here:
        searchTextField.setText("");
        meaningTextPane.setText("");
        state = 0;
        initDictList();
    }//GEN-LAST:event_evButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String searchWord = searchTextField.getText();       
        if (searchWord.trim().isEmpty()) {
            check_input = -1;
        } else if (state == 0) {
            if (dic1.getWord().contains(searchWord)) {
                check_input = 1;
                meaningTextPane.setText(dic1.getDictData().get(searchTextField.getText()));
            }
        } else if (state == 1) {
            if (dic2.getWord().contains(searchWord)) {
                check_input = 1;
                meaningTextPane.setText(dic2.getDictData().get(searchTextField.getText()));
            }
        }
        
        if (check_input == -1) {
            JOptionPane.showMessageDialog(null, "Từ đang bị trống, vui lòng nhập lại", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else if (check_input == 0) {
            JOptionPane.showMessageDialog(null, "Từ này đang không có trong từ điển!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        af.setVisible(true);
        af.wordTextField.setText("");
        af.meaningTextPane.setText("");
    }//GEN-LAST:event_addButtonActionPerformed

    private void veButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_veButtonActionPerformed
        // TODO add your handling code here:
        searchTextField.setText("");
        meaningTextPane.setText("");
        state = 1;
        initDictList();
    }//GEN-LAST:event_veButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int answer = JOptionPane.showConfirmDialog(null, "Bạn có muốn lưu lại những thay đổi không?", "Thông báo", JOptionPane.YES_OPTION);
        if (answer == JOptionPane.YES_OPTION) {
            try {
                dic1.updateFile();
                dic2.updateFile();
            } catch (IOException ex) {
                Logger.getLogger(DictApp.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_formWindowClosing

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String word = dictList.getSelectedValue();
        if (word == null) {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn từ để xoá!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            int answer = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xoá từ này khỏi từ điển không?", "Cảnh báo", JOptionPane.YES_OPTION);
            if (state == 0) {                
                if (answer == JOptionPane.YES_OPTION) {
                    dic1.removeFromDict(word);
                    initDictList();
                    check_input = 1;
                }                
            } else if (state == 1) {                
                if (answer == JOptionPane.YES_OPTION) {
                    dic2.removeFromDict(word);
                    initDictList();
                    check_input = 1;
                }                
            }
            if (check_input == 1) {
                JOptionPane.showMessageDialog(null, "Đã xong!");
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        String word = dictList.getSelectedValue();
        EditForm ef = new EditForm();
        if (word == null) {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn từ để sửa!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            ef.setVisible(true);
            ef.wordTextField.setText(word);
            if (state == 0) {
                ef.meaningTextPane.setText(dic1.getDictData().get(word));
            } else if (state == 1) {
                ef.meaningTextPane.setText(dic2.getDictData().get(word));
            }
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void searchTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextFieldMouseClicked
        // TODO add your handling code here:
        searchTextField.setText("");
    }//GEN-LAST:event_searchTextFieldMouseClicked

    private void speakerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speakerButtonActionPerformed
        // TODO add your handling code here:
        Voice voice;
        VoiceManager voiceManager = VoiceManager.getInstance();   
        voice = voiceManager.getVoice("kevin16");
        voice.allocate();
        voice.speak(word_select);
    }//GEN-LAST:event_speakerButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        // TODO add your handling code here:
        try {
            dic1.updateFile();
            dic2.updateFile();
        } catch (IOException ex) {
            Logger.getLogger(DictApp.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "Mọi thông tin đã được thay đổi!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_exportButtonActionPerformed

    private void recentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recentButtonActionPerformed
        // TODO add your handling code here:
        searchTextField.setText("");
        meaningTextPane.setText("");
        initRecentWordList();
    }//GEN-LAST:event_recentButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DictApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DictApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DictApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DictApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DictApp().setVisible(true);
            }
        });
    }
    
    public class AddForm extends javax.swing.JFrame {

        public AddForm() {
            initComponents();
        }

        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void initComponents() {

            evTypeButton = new javax.swing.JButton();
            veTypeButton = new javax.swing.JButton();
            jLabel1 = new javax.swing.JLabel();
            wordTextField = new javax.swing.JTextField();
            jLabel2 = new javax.swing.JLabel();
            jLabel3 = new javax.swing.JLabel();
            submitButton = new javax.swing.JButton();
            jScrollPane1 = new javax.swing.JScrollPane();
            meaningTextPane = new javax.swing.JTextPane();

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

            evTypeButton.setText("Anh - Việt");
            evTypeButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    evTypeButtonActionPerformed(evt);
                }
            });

            veTypeButton.setText("Việt - Anh");
            veTypeButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    veTypeButtonActionPerformed(evt);
                }
            });

            jLabel1.setText("Loại từ:");

            jLabel2.setText("Từ: ");

            jLabel3.setText("Nghĩa của từ:");

            submitButton.setText("Xác nhận");
            submitButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    submitButtonActionPerformed(evt);
                }
            });

            meaningTextPane.setContentType("text/html"); // NOI18N
            jScrollPane1.setViewportView(meaningTextPane);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(62, 62, 62)
                                    .addComponent(evTypeButton)
                                    .addGap(89, 89, 89)
                                    .addComponent(veTypeButton)
                                    .addGap(109, 109, 109))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(38, 38, 38)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                                        .addComponent(wordTextField)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(216, 216, 216)
                            .addComponent(submitButton)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(evTypeButton)
                        .addComponent(veTypeButton)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(32, 32, 32)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(wordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(45, 45, 45)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(submitButton)))
                    .addContainerGap(45, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>                        

        private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
            // TODO add your handling code here:
            String word = wordTextField.getText().toLowerCase();
            String meaning = "<html>" + meaningTextPane.getText();
            if (wordTextField.getText().isEmpty() || meaningTextPane.getText().isEmpty()) {
                check_input = -1;
            } else {
                if (state == 0) {
                    if (dic1.getWord().contains(wordTextField.getText())) {
                        check_input = 1;
                    } else {
                        check_input = 0;
                        int answer = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn thêm vào?", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        if (answer == JOptionPane.YES_OPTION) {
                            dic1.addIntoDict(word, meaning);
                        }                
                    }
                } else if (state == 1) {
                    if (dic2.getWord().contains(wordTextField.getText())) {
                        check_input = 1;
                    } else {
                        check_input = 0;
                        int answer = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn thêm vào?", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        if (answer == JOptionPane.YES_OPTION) {
                            dic2.addIntoDict(word, meaning);
                        }
                    }
                }
                JOptionPane.showMessageDialog(null, "Đã hoàn thành", "Thông báo", -1);
                setVisible(false);
                initDictList();
            }

            if (check_input == -1) {
                JOptionPane.showMessageDialog(null, "Ô từ mới đang bị rỗng!!! Vui lòng nhập lại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            } else if (check_input == 1) {
                JOptionPane.showMessageDialog(null, "Từ bị nhập vào đã tồn tại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }  

        private void evTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {                                         
            // TODO add your handling code here:
            state = 0;
            JOptionPane.showMessageDialog(null, "Bạn đã chọn từ điển Anh-Việt", "Thông báo", -1);
        }                                        

        private void veTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {                                         
            // TODO add your handling code here:
            state = 1;
            JOptionPane.showMessageDialog(null, "Bạn đã chọn từ điển Anh-Việt", "Thông báo", -1);
        }


        // Variables declaration - do not modify                     
        private javax.swing.JButton evTypeButton;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTextPane meaningTextPane;
        private javax.swing.JButton submitButton;
        private javax.swing.JButton veTypeButton;
        private javax.swing.JTextField wordTextField;
        // End of variables declaration                   
    }
    
    public class EditForm extends javax.swing.JFrame {

        public EditForm() {
            initComponents();
        }

        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void initComponents() {

            evTypeButton = new javax.swing.JButton();
            veTypeButton = new javax.swing.JButton();
            jLabel1 = new javax.swing.JLabel();
            wordTextField = new javax.swing.JTextField();
            jLabel2 = new javax.swing.JLabel();
            jLabel3 = new javax.swing.JLabel();
            submitButton = new javax.swing.JButton();
            jScrollPane1 = new javax.swing.JScrollPane();
            meaningTextPane = new javax.swing.JTextPane();

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

            evTypeButton.setText("Anh - Việt");
            evTypeButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    evTypeButtonActionPerformed(evt);
                }
            });

            veTypeButton.setText("Việt - Anh");
            veTypeButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    veTypeButtonActionPerformed(evt);
                }
            });

            jLabel1.setText("Loại từ:");

            jLabel2.setText("Từ: ");

            jLabel3.setText("Nghĩa của từ:");

            submitButton.setText("Xác nhận");
            submitButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    submitButtonActionPerformed(evt);
                }
            });

            meaningTextPane.setContentType("text/html"); // NOI18N
            jScrollPane1.setViewportView(meaningTextPane);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(62, 62, 62)
                                    .addComponent(evTypeButton)
                                    .addGap(89, 89, 89)
                                    .addComponent(veTypeButton)
                                    .addGap(109, 109, 109))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(38, 38, 38)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                                        .addComponent(wordTextField)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(216, 216, 216)
                            .addComponent(submitButton)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(evTypeButton)
                        .addComponent(veTypeButton)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(32, 32, 32)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(wordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(45, 45, 45)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(submitButton)))
                    .addContainerGap(45, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>                        

        private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
            // TODO add your handling code here:
            if (wordTextField.getText().isEmpty() || meaningTextPane.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ô từ mới đang bị rỗng!!! Vui lòng nhập lại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            } else {
                int answer = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn sửa từ này?", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                if (answer == JOptionPane.YES_OPTION) {
                    String old_word = dictList.getSelectedValue();
                    String new_word = wordTextField.getText().toLowerCase();
                    String meaning = "<html>" + meaningTextPane.getText();
                    if (state == 0) {
                        dic1.editInDict(old_word, new_word, meaning);
                    } else if (state == 1) {
                        dic2.editInDict(old_word, new_word, meaning);
                    }
                    JOptionPane.showMessageDialog(null, "Đã hoàn thành", "Thông báo", -1);
                    setVisible(false);
                    initDictList();
                }
            }
        }                                            

        private void evTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
            // TODO add your handling code here:
            state = 0;
            JOptionPane.showMessageDialog(null, "Bạn đã chọn từ điển Anh-Việt", "Thông báo", -1);
        }                                            

        private void veTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
            // TODO add your handling code here:
            state = 1;
            JOptionPane.showMessageDialog(null, "Bạn đã chọn từ điển Anh-Việt", "Thông báo", -1);
        }                                            

        // Variables declaration - do not modify                     
        private javax.swing.JButton evTypeButton;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JScrollPane jScrollPane1;
        public javax.swing.JTextPane meaningTextPane;
        private javax.swing.JButton submitButton;
        private javax.swing.JButton veTypeButton;
        public javax.swing.JTextField wordTextField;
        // End of variables declaration                   
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JList<String> dictList;
    private javax.swing.JButton editButton;
    private javax.swing.JButton evButton;
    private javax.swing.JButton exportButton;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane meaningTextPane;
    private javax.swing.JButton recentButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JButton speakerButton;
    private javax.swing.JButton veButton;
    // End of variables declaration//GEN-END:variables
}
